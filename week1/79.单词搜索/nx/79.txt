import re
class Solution:
    def exist(self, board: List[List[str]], word: str) -> bool:
        n=len(word)
        h=len(board)
        l=len(board[0])
        visit=set()
        def last(i,x,y):
            # if board[x][y]!=word[i]:
            #     return False
            if i==n-1:
                return True
            visit.add((x,y))
            result=False
            for nx, ny in (x + 1, y), (x - 1, y), (x, y + 1), (x, y - 1):
                if 0 <= nx < h and 0 <= ny < l and board[nx][ny] == word[i+1] and  (nx,ny) not in visit:
                    if last(i+1,nx,ny):
                        result=True
                        break
            visit.remove((x,y))
            return result

                    
        for x in range(h):
            for y in range(l):
                if board[x][y]==word[0]:
                    if last(0,x,y):
                        return True
        return False

