class Solution:
    def shortestBridge(self, grid: List[List[int]]) -> int:
        h=len(grid)
        l=len(grid[0])
        list_1=list()
        for x in range(h):
            for y in range(l):
                if grid[x][y]==1:
                    list_1.append((x,y))
                    grid[x][y]=-1
                    break
            if list_1:
                break
        p=0
        while p<len(list_1):
            i,j = list_1[p]
            for x, y in (i + 1, j), (i - 1, j), (i, j+1), (i, j-1):
                if x<0 or x>=h or y<0 or y>=l or grid[x][y]!=1:
                    continue
                grid[x][y] = -1
                list_1.append((x, y))
            p += 1
        for step in range(h*l+1):
            list_2 = list()
            for i,j in list_1:
                for x, y in (i + 1, j), (i - 1, j), (i, j+1), (i, j-1):
                    if x<0 or x>=h or y<0 or y>=l or grid[x][y]==-1:
                        continue
                    if grid[x][y] == 1:
                        return step
                    list_2.append((x, y))
                    grid[x][y]=-1
            list_1=list_2
        return -1
